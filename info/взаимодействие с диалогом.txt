Сначала открывается всплывашка. Внутренний скрипт смотрит, на какой кнопке произошёл щелчок. Дальше он вызывает Open_Dialog. Этот скрипт находится в фоновом background.js


Это очень простой скрипт

function open_dialog()
{
    //сперва он запрашивает активную вкладку из активного окна
    var promise = browser.tabs.query({active: true, currentWindow: true}); 
    //затем, получив эту вкладку, получает информацию об адресе и заголовкке и открывает диалог добавления
    promise.then( function (tabs) {
    //console.log("tab is ", tabs[0]);  
        Dialog_Tab.set_tab_info(tabs[0]); //эта строка не нужная, удалим её
        Dialog_Tab.open(tabs[0].url, tabs[0].title);
    });
    
    //add listener to fucking onConnect and wait when created tab request data
    browser.runtime.onConnect.addListener(connected);
    

}


Ну а внутри функция выглядит так
        //загружаем одну из страничек, вложенных в расширение
        var fullurl = browser.runtime.getURL("/pages/dialog.html");
        //создаём и открываем новую вкладку с нею.
        var creating = browser.tabs.create({
            active: true,
            url: fullurl
        });
        
        creating.then(function (tab) 
        {
            //не ждём, когда нам сообщат о завершении создании диалога.

            
            
Вместо этого мы ждём сообщения через порт и систему сообщений

Вот этот порт
var port_from_dialog;

//вот функция-слушатель, которая ждёт, когда случится событие onConnect
function connected(p) {
    //set port
  console.log(p.name, p.name === 'append_dialog');
  port_from_dialog = p;
  //сразу отправляем через порт информацию, которая нужна диалогу
  port_from_dialog.postMessage(Dialog_Tab.info);
}
            
            
Вот вся функция            
function open_dialog()
{
    //запрашиваем активную вкладку
    var promise = browser.tabs.query({active: true, currentWindow: true}); 
    promise.then( function (tabs) {
        //открываем новую вкладку
        Dialog_Tab.open(tabs[0].url, tabs[0].title);
    });
    
    //устаналиванием соединением с его скриптом. 
    browser.runtime.onConnect.addListener(connected);
}
            