Дурацкий browser.storage это химера от срамного блуда localStorage и IndexedDB. Она также является хранилищем ключей, но асинхронным. 

Она принимает данные по ключу

browser.storage.local.set(key: Object)

Оно возвращает данные по ключу

browser.storage.local.get.then((data)=> data = {key: Object})



Расширение состоит из нескольких фоновых скриптов, которые поддерживают странички.

В качесте базы данных пока используется browser.storage.local

Первый фоновый скрипт init.js проверяет, усстановлено ли расширение, на месте данные, правильные ли это данные. Если нет, то записывает тестовые данные или пустую заглушку. 

Затем он даёт сигнал файлу proxy_data, что пора начинать работу. Этот файл связан с dynalinks.min, который собственно и является базой данных, собранной из "сырых" данных. 

proxy_data должен извлечь данные из хранилища и загрузить их в dynalinks. Также он обслуживает взаимодействие с другими скриптами посредством портов (система runtime.connect). 

Он принимает 

browser.runtime.onConnect.addListener(dispatch);

соединения от разных портов, и сообщения от них. Эти порты могут быть открыты файлом "dialog add record", суть которого в добавлении новой записи. 

proxy принимает сообщения двух видов - команды на исполнение и команды на получение информации. 

Сообщение имеет вид

command: value
остальные ключи, зависящие от команды.

command: create_catalog
name: name

ответы

command: create_catalog
name: name
result: yes/no/exists

command: get
info: categories

ответ

command : get
info: categories
givin: запрошенные дата
type_data: тип данных (в нашем случае - массив)


command: get
info: tag_list
category: name

response

command: get
info: tag_list
category: name
givin: array of tags
type_data: array

command: add_record
info: record
{
    url: url,
    title: title,
    tag:tag,
    category: name
}

response

commad: add_record
info: record
result: yes/no/exists

проверка существования записи проводится по её адресу
запись возвращается целиком, поскольку в ней могут быть произведены изменения.
например, добавлен uuid



***

Итак, мы закончили с диалогами добавления и обёрткой вокруг данных. Теперь на очереди страничка, которая показывает содержимое хранилища. Эта страница вызывается из всплывашки. Она работает в своём контексте, который не знает ничего о контекстах соседних скриптов. 

Но ей нужны файлы dynalinks и proxy_data. 

Можно их просто включить. Но они работают в другом контексте, поэтому объекты, нужные мне просто не созданы. 



Что теперь делать?

Можно создать два объекта управления данными. 
Можно передать данные из одного объекта в другой, но неведомо  к чему такое приведёт. 